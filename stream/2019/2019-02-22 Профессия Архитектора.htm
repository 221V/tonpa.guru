<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>2019-02-22</title>
    <link rel="stylesheet" href="../../blank.css?v=4" />
</head>
<body>
<nav>
    <a href='../../index.html'>5HT</a>
    <a href='../index.html'>STREAM</a>
    <a href='#'>2019-02-22</a>
</nav>
<main>
    <section>
        <h3>Профессия Архитектора</h3>

        <p> TL;DR В этой статье хочу представить субъективное восприятие
            роли архитектора с точки зрения моей профдеформации.</p>

        <p> Есть разные виды архитекторов, но формально можно описывать
            системных архитекторов как универсальных абстрактных
            архитекторов. Степень формализации может бысть сложная и математически сложная,
            поэтому хорошо бы если бы системный архитектор мог
            представить систему в языках с зависимыми типами.
            Если, скажем, не может, то PhD такого архитектора уже с натяжечкой.</p>

        <p> Вообще архитекторы не обязаны быть системными, например: </p>

        <p> — Архитектор предеприятия;<br>
            — Архитектор промышленных сооружений;<br>
            — Архитектор структурированных кабельных систем;<br>
            — Архитектор программного обеспечения. </p>

        <p> Если последние три еще более менее понятны моему читателю, то архитектор
            предприятия — это человек, который находится в контексте
            вопросов: "почему", "как", "что", "кто", "где", "когда". Эти вопросы мапятся
            в матрицу предприятия придумпанную Захманом, так и называется
            Фреймворк Захмана или ISO/IEC/IEEE 42010:2011:</p>
            <figure><img src="img/ERP.png"></figure>

        <p> Если нет, тогда архитектор должен предоставить как минимум протоколы
            всех  систем, хорошо бы если от сетевых проотоколов
            и до аппликейшин леера, а то если чего-то не может, то какой это специалист?
            UTF-8, HTTP/2, WebSocket, IEEE-754 — вот минимальный набор с которым
            можно начинать строить тонкого клиента на JavaScript. Если даже этого не знает,
            то такой архитектор слишком возвышен. Желательно также, чтоб архитектор
            на спор мог за выходные написать имплементацию лобого протокола, который он предлагает,
            исключение может составить только HTTP/2.</p>

        <p> Чтоб структурно определиить понятие системного архитектора,
            можно выделить множество процессов, которые находятся под его
            руководством (обычно говорят об обязанностях архитектора но
            никогда о том, как архитектор долджен управлять своим свечным заводиком,
            будем называть это архитектурное бюро или проектно-конструкторское ПКБ АСУ LTD):</p>

        <p> — Архитектура;<br>
            — Прототипирование;<br>
            — Проектная документация;<br>
            — Авторский надзор;<br>
            — Комплексные тренинги персонала;<br>
            — Устранение неисправностей;<br>
            — Разработка операционных протоколов;<br>
            — Разработка процессов разработки;<br>
            — Пусконаладка.
        </p>

        <p> Как вы поняли, на такого архритектора можно навалить дофига обязанностей,
            но я бы еще добавил, что в опен соурсе важны еще такие процессы:</p>

        <p> — Публикация;<br>
            — Система распространения;<br>
            — Паблик релейшинс;<br>
            — Тренинги как франчайзинг методологии;<br>
            — История клиентов и их поддержка.</p>

        <p> Самые крутые бюро могут включать рисёрч и девелопмент,
            если протоколы очень сложные: </p>

        <p> — Исследовательские группы.<br>

        <p> Тут имеется ввиду, что важно как архитектор публично представляет результаты своего труда,
            как это выражается в публичных выступлениях, опен соурс репозиториях, сайтах и тому подобное.
            Система распространения, всяческая поддержка клиентов на других площадках, как например
            предоставление поддержки через различные каналы и АПИ. Тренинги по своему стеку,
            если он закрытый или публичный, являются единственным способом убедить
            использовать вашу технологию и видение не капиталисту, который платит
            за продукт, а людям инженерам которые будут ваш продукт создавать и использовать,
            и от этого зависит и ваш паблик релейшинс и история ваших клиентов. Их нужно пытаться держать в топчике и на что попало
            не размениваться. Но начать всегда можно с достойного!</p>

        <p> Продолжение следует.</p>
    </section>
</main>
<footer>Namdak Tonpa <span class="heart">&nbsp;❤&nbsp;</span> 2009—2019</footer>
</body>
</html>
