LUA.EFI

Я все-таки упоролся и скачал EDK2 от Intel.

Скомпилировал Lua и запустил на FAT32, к сожалению все остальные драйвера FS
только в режиме Read-Only, а как писать из EFI Shell на HFS+ (встроенный
драйвер эппловского EFI) пока не нашел как (если кто-то знает скажите мне).

Shell> type test.lua

s = string.rep("Q",8000000)
f = io.open("lua.bin","a")
for i=0,4000/8,1 do f:write(s) end
f:close()

Таким образом концепция Erlang.EFI очень реальная. LUA вот работает, без OS.
Дальше буду пробовать всякие TCP/IP, тут столько написали всякого стаффа для
EFI (Например есть еще Pyhton и какой-то WebServer, я его еще не смотрел).
Вообщем это намного прикольнее чем свою OS писать. Надо только драйвер для
блочной GooFS, которая в LING/Xen используется.

Все знают, что я очень впечатлительный, но по-моему EFI — годная, hackable
штука, которую можно хачить под clang/gcc/cl.

P.S. Нашел пацанов у нас, которые по UEFI упарываются: http://jelezo.com.ua
И даже полезные диагностические утилиты пишут. Надо им предложить стартап:
Erlang to EBC Byte Code Compiler. Ну и LING.EFI конечно же, теперь я точно
уверен как надо LING паковать и запускать.
TAGS (EDIT) efi, ling
